<!-- path: index.gohtml -->
<!doctype html>
<html lang="ru">
<head>
  <meta charset="utf-8">
  <title>Index of {{.Name}}</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
    :root { --bg:#0b1020; --panel:#11183a; --text:#e9edf7; --muted:#9aa3b2; --border:#253056; --accent:#4ea1ff; --danger:#ff6b6b; }
    * { box-sizing: border-box; }
    body { margin:0; background:linear-gradient(180deg,#0b1020,#0e1530 55%,#0b1020); color:var(--text); font:14px/1.45 system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;}
    .wrap { max-width: 1200px; margin:32px auto; padding:0 16px; }
    h1 { font-size: 18px; margin:0 0 6px; letter-spacing:.3px; }
    .crumbs { color:var(--muted); font-size:13px; margin-bottom:12px; }
    .crumbs code { background:#0b1128; color:#cdd6f4; padding:2px 6px; border:1px solid var(--border); border-radius:6px; }

    .panel { background:var(--panel); border:1px solid var(--border); border-radius:12px; box-shadow:0 6px 22px rgba(0,0,0,.25); overflow:hidden; }
    .toolbar { display:flex; gap:12px; align-items:center; justify-content:space-between; padding:10px 14px; border-bottom:1px solid var(--border); background:rgba(255,255,255,.02); }
    .up { color:var(--accent); text-decoration:none; }
    .stats { color:var(--muted); font-size:12px; white-space:nowrap; }

    .filter { display:flex; align-items:center; gap:8px; }
    .filter input {
      width: 260px; max-width: 50vw; padding:8px 10px; border-radius:8px; border:1px solid var(--border);
      background:#0b1128; color:var(--text); outline:none;
    }
    .filter button {
      padding:8px 10px; border-radius:8px; border:1px solid var(--border); background:#0b1128; color:var(--muted); cursor:pointer;
    }

    table { width:100%; border-collapse:collapse; table-layout: fixed; }
    thead th { text-align:left; font-weight:600; color:#c8d2e6; font-size:12px; letter-spacing:.3px; padding:10px 14px; background:rgba(255,255,255,.02); border-bottom:1px solid var(--border); }
    tbody td { padding:10px 14px; border-bottom:1px solid var(--border); vertical-align:middle; }
    tbody tr:hover { background: rgba(78,161,255,.08); }

    thead th:nth-child(1){ width:auto; }
    thead th:nth-child(2){ width:140px; }
    thead th:nth-child(3){ width:200px; }

    .name { white-space: nowrap; }
    .rowline { display:flex; align-items:center; gap:8px; }
    .rowline .entry { flex:1 1 auto; min-width:0; }
    .name a.entry { display:block; overflow:hidden; text-overflow:ellipsis; white-space:nowrap; max-width:100%; color:var(--text); text-decoration:none; }
    .name a.entry:hover { color:var(--accent); }

    .btn { display:inline-flex; align-items:center; gap:6px; padding:6px 10px; border-radius:8px; border:1px solid var(--border); cursor:pointer; text-decoration:none; white-space:nowrap; }
    .btn:disabled { opacity:.6; cursor:not-allowed; }
    .btn-del { color:#ffecec; background: rgba(255,107,107,.12); border-color: rgba(255,107,107,.35); }
    .btn-del:hover { background: rgba(255,107,107,.22); }
    .btn-del[aria-busy="true"]{ position:relative; }
    .btn-del[aria-busy="true"]::after{ content:""; width:12px; height:12px; border:2px solid rgba(255,255,255,.7); border-top-color:transparent; border-radius:50%; display:inline-block; animation:spin .8s linear infinite; }
    @keyframes spin { to { transform: rotate(360deg) } }

    .btn-primary { color:#0b1020; background: #7ec8ff; border-color:#7ec8ff; }
    .btn-primary:hover { filter:brightness(0.95); }

    .mono { font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; font-variant-numeric: tabular-nums; }
    .empty { color:var(--muted); padding: 18px 14px; }

    .upload { margin-top:16px; }
    .upload .body { display:flex; gap:10px; flex-wrap:wrap; padding:12px 14px; }
    .upload input[type="file"] { color:var(--text); }
    .upload input[type="text"] {
      padding:8px 10px; border-radius:8px; border:1px solid var(--border); background:#0b1128; color:var(--text);
    }
    .muted { color:var(--muted); font-size:12px; }

    @media (max-width: 720px) {
      thead th:nth-child(2), thead th:nth-child(3), td:nth-child(2), td:nth-child(3){ display:none; }
      .filter input { max-width: 60vw; }
    }
  </style>
</head>
<body>
  <div class="wrap">
    <h1>Index of <code>{{.Name}}</code></h1>
    <div class="crumbs">Path: <code>/{{.Name}}</code></div>

    <section class="panel">
      <div class="toolbar">
        <a class="up" href="../">‚üµ ../</a>
        <div class="filter">
          <input id="filterInput" type="text" placeholder="–§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é‚Ä¶ (EN/RU)" aria-label="Filter by name">
          <button id="clearBtn" type="button">–û—á–∏—Å—Ç–∏—Ç—å</button>
        </div>
        <div class="stats">
          Folders: <span id="statDirs">{{len .Folders}}</span> ¬∑
          Files: <span id="statFiles">{{len .Files}}</span> ¬∑
          Showing: <span id="statShown"></span>
        </div>
      </div>

      {{ $mode:=.Mode }}
      {{ $name:=.Name }}
      <table id="listing">
        <thead>
          <tr><th>Name</th><th>Size</th><th>Last modified</th></tr>
        </thead>
        <tbody>
          {{range .Folders}}
          <tr class="item dir" data-type="dir" data-name="{{.}}">
            <td class="name mono" title="{{.}}">
              <div class="rowline">
                <a class="entry" href="{{.}}">üìÅ {{.}}</a>
                {{ if eq $mode "delete" }}<button type="button" class="btn btn-del" data-del="?delete!{{ base64 $name . }}" data-item="{{.}}">Delete</button>{{end}}
              </div>
            </td>
            <td class="mono">‚Äî</td>
            <td class="mono">‚Äî</td>
          </tr>
          {{end}}

          {{range .Files}}
          <tr class="item file" data-type="file" data-name="{{.Name}}">
            <td class="name mono" title="{{.Name}}">
              <div class="rowline">
                <a class="entry" href="?{{.Base64}}">üìÑ {{.Name}}</a>
                {{ if eq $mode "delete" }}<button type="button" class="btn btn-del" data-del="?delete!{{.Base64}}" data-item="{{.Name}}">Delete</button>{{end}}
              </div>
            </td>
            <td class="mono">{{humanize .Size}}</td>
            <td class="mono">{{time .LastModified}}</td>
          </tr>
          {{end}}

          {{if and (eq (len .Folders) 0) (eq (len .Files) 0)}}
          <tr><td colspan="3" class="empty">No objects found in this prefix.</td></tr>
          {{end}}
        </tbody>
      </table>
    </section>
    {{if or (eq $mode "put") (eq $mode "delete")}}
    <!-- Upload panel -->
    <section class="panel upload">
      <div class="toolbar"><strong>Upload</strong><span class="muted">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é</span></div>
      <div class="body">
        <form id="uploadForm" method="post" enctype="multipart/form-data" action="">
          <input type="file" name="file" multiple required>
          <button type="submit" class="btn btn-primary">–ó–∞–≥—Ä—É–∑–∏—Ç—å</button>
        </form>
      </div>
    </section>
  </div>
  {{end}}

  <script>
    (function(){
      const $ = (s,root=document)=>root.querySelector(s);
      const $$ = (s,root=document)=>Array.from(root.querySelectorAll(s));

      // EN<->RU —Ä–∞—Å–∫–ª–∞–¥–∫–∞
      const EN_RU = new Map(Object.entries({
        "`":"—ë","q":"–π","w":"—Ü","e":"—É","r":"–∫","t":"–µ","y":"–Ω","u":"–≥","i":"—à","o":"—â","p":"–∑","[":"—Ö","]":"—ä",
        "a":"—Ñ","s":"—ã","d":"–≤","f":"–∞","g":"–ø","h":"—Ä","j":"–æ","k":"–ª","l":"–¥",";":"–∂","'":"—ç",
        "z":"—è","x":"—á","c":"—Å","v":"–º","b":"–∏","n":"—Ç","m":"—å",",":"–±",".":"—é","/":"."
      }));
      const RU_EN = new Map(Array.from(EN_RU.entries()).map(([k,v])=>[v,k]));
      const toLower = (s)=> (s||"").toLocaleLowerCase();
      const switchLayout = (s, map) => { s = toLower(s); let out = ""; for (const ch of s) out += map.get(ch) || ch; return out; };

      const input = $('#filterInput');
      const clear = $('#clearBtn');
      const rows  = $$('#listing tbody tr.item');
      const statShown = $('#statShown');

      // –ø—Ä–µ–¥—Ä–∞—Å—á–µ—Ç –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
      for (const tr of rows) {
        const name = tr.dataset.name || '';
        const lower = toLower(name);
        tr.dataset.nLower = lower;
        tr.dataset.nFromEn = switchLayout(lower, EN_RU);
        tr.dataset.nFromRu = switchLayout(lower, RU_EN);
      }

      function applyFilter() {
        const q0 = toLower(input.value);
        const qFromEn = switchLayout(q0, EN_RU);
        const qFromRu = switchLayout(q0, RU_EN);
        let shown = 0;
        for (const tr of rows) {
          const a = tr.dataset.nLower, b = tr.dataset.nFromEn, c = tr.dataset.nFromRu;
          const ok = !q0 || a.includes(q0) || a.includes(qFromEn) || b.includes(q0) || a.includes(qFromRu) || c.includes(q0);
          tr.style.display = ok ? "" : "none";
          if (ok) shown++;
        }
        statShown.textContent = String(shown);
      }

      input.addEventListener('input', applyFilter);
      clear.addEventListener('click', () => { input.value=''; input.focus(); applyFilter(); });

      // === DELETE/POST + reload ===
      function enableBusy(btn, on){
        if (on) { btn.disabled = true; btn.setAttribute('aria-busy','true'); }
        else    { btn.disabled = false; btn.removeAttribute('aria-busy'); }
      }
      async function tryDelete(url){
        // 1) DELETE
        try {
          const r = await fetch(url, { method: 'DELETE', credentials: 'same-origin', redirect: 'follow' });
          if (r.ok || (r.status >= 200 && r.status < 400)) return true;
          // 2) POST fallback for backends without DELETE
          if ([405,404,400].includes(r.status)) {
            const p = await fetch(url, { method: 'POST', credentials: 'same-origin', redirect: 'follow' });
            if (p.ok || (p.status >= 200 && p.status < 400)) return true;
          }
        } catch (_) {}
        return false;
      }
      for (const btn of $$('.btn-del')) {
        btn.addEventListener('click', async (e) => {
          e.preventDefault(); e.stopPropagation();
          const name = btn.getAttribute('data-item') || 'item';
          const url  = btn.getAttribute('data-del');
          if (!url) return;
          if (!confirm(`–£–¥–∞–ª–∏—Ç—å ‚Äú${name}‚Äù? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.`)) return;
          enableBusy(btn, true);
          const ok = await tryDelete(url);
          if (ok) location.reload(); else location.href = url; // final fallback
        });
      }

      // upload -> –ø–æ—Å—Ç–∏–º –Ω–∞ —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
      const form = document.getElementById('uploadForm');
      if (form) form.action = location.pathname;

      // init
      applyFilter();
    })();
  </script>
</body>
</html>